{"version":3,"sources":["webpack://yodel/./dist/Errors.js","webpack://yodel/./dist/Field.js","webpack://yodel/./dist/Format.js","webpack://yodel/./dist/Section.js","webpack://yodel/webpack/bootstrap","webpack://yodel/./dist/yodel.js"],"names":["extendStatics","__extends","this","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","YodelError","ReservedValue","UnkownGroup","InvalidFieldArgs","_super","bytesproblem","_this","name","Error","group","assignment","message","Field","FieldType","Errors_1","int","str","bytearray","flags","type","bytes","min","max","args","length","Format","fields","mtype","RangeError","Section","fmt","payload","format","__webpack_module_cache__","__webpack_require__","moduleId","module","__webpack_modules__","YodelSocket","Section_1","Format_1","API_AUTO_DECODE_HEADER","API_EMPTY_FORMAT","YodelMessage","action","kwargs","stringify","JSON","hostip","groups","onmessage","messageStack","_relay","_name","channel","directSock","WebSocket","thisref","addEventListener","event","ysock","section","data","parse","number","startsWith","jsondata","slice","string","push","handleIncomingMessage","setOnConnect","fn","onopen","setOnMessage","forEach","sendNewFormat","sendRawMessage","send","outName","outGroup","sendType","Blob","text","then","result","joinGroup","newgroup","indexOf","leaveGroup","oldgroup","idx","splice","get","set","newname","enumerable","configurable","val","relay","msg","rawform","Errors_2","Field_1","Section_2","Format_2"],"mappings":"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","file":"yodel.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.YodelError = exports.ReservedValue = exports.UnkownGroup = exports.InvalidFieldArgs = void 0;\n/**\n * InvalidFieldFieldArgs is thrown when invalid arguments are provided in the\n * constructor for a {@linkcode Field} object.\n */\nvar InvalidFieldArgs = /** @class */ (function (_super) {\n    __extends(InvalidFieldArgs, _super);\n    /**@private*/\n    function InvalidFieldArgs(bytesproblem) {\n        var _this = this;\n        if (bytesproblem) {\n            _this = _super.call(this, \"Invalid Field Arguments: Must specify bytes, min/max, or arguments.\") || this;\n        }\n        else {\n            _this = _super.call(this, \"Invalid Field Arguments: Cannot create bit-lookup for Field object not of type 'flags'.\") || this;\n        }\n        _this.name = \"InvalidFieldArgs\";\n        return _this;\n    }\n    return InvalidFieldArgs;\n}(Error));\nexports.InvalidFieldArgs = InvalidFieldArgs;\n;\n/**\n * UnkownGroup is thrown when a {@linkcode YodelSocket} tries to leave a group\n * that it is not a part of.\n * See {@linkcode YodelSocket.leaveGroup}\n */\nvar UnkownGroup = /** @class */ (function (_super) {\n    __extends(UnkownGroup, _super);\n    /**@private*/\n    function UnkownGroup(group) {\n        var _this = _super.call(this, \"Cannot leave group '\" + group + \"' because this YodelSocket is not a part of group '\" + group + \"'\") || this;\n        _this.name = \"UnkownGroup\";\n        return _this;\n    }\n    return UnkownGroup;\n}(Error));\nexports.UnkownGroup = UnkownGroup;\n;\n/**\n * ReservedValue is thrown when a user tries to use a value that is reserved for the api.\n * e.g: Setting the mtype of a {@linkcode Format} object to -127 (this number is reserved\n * for the API)\n */\nvar ReservedValue = /** @class */ (function (_super) {\n    __extends(ReservedValue, _super);\n    /**@private*/\n    function ReservedValue(value, assignment) {\n        var _this = _super.call(this, \"Invalid use of reserved value [\" + value + \"] in assignment to '\" + assignment + \"'.\") || this;\n        _this.name = \"ReservedValue\";\n        return _this;\n    }\n    return ReservedValue;\n}(Error));\nexports.ReservedValue = ReservedValue;\nvar YodelError = /** @class */ (function (_super) {\n    __extends(YodelError, _super);\n    /**@private @internal*/\n    function YodelError(message, name) {\n        var _this = _super.call(this, message) || this;\n        _this.name = name;\n        return _this;\n    }\n    return YodelError;\n}(Error));\nexports.YodelError = YodelError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Field = exports.FieldType = void 0;\nvar Errors_1 = require(\"./Errors\");\n/**\n * FieldType is an enumeration of normal python types.\n */\nvar FieldType = /** @class */ (function () {\n    function FieldType() {\n    }\n    /**The 'int' type from python */\n    FieldType.int = 0;\n    /**The 'str' type from python */\n    FieldType.str = 1;\n    /**The 'bytearray' type from python */\n    FieldType.bytearray = 2;\n    /**The yodel.flags type from yodel */\n    FieldType.flags = 3;\n    return FieldType;\n}());\nexports.FieldType = FieldType;\n;\n/**\n * A Field is used to encode one part of a {@linkcode Format}.\n * Each field is given a name, and some typing information. A field's purpose\n * is not to actually store values, but rather to them a key (as in a JSON key, value pair),\n * and some extra metadata for yodel.\n */\nvar Field = /** @class */ (function () {\n    function Field(name, type, bytes, min, max, args) {\n        if (bytes === void 0) { bytes = 0; }\n        if (min === void 0) { min = 0; }\n        if (max === void 0) { max = 0; }\n        if (args === void 0) { args = []; }\n        /**\n         * For some field types this will always be zero.\n         * For {@linkcode FieldType.int}, min is the minimum value that this field may be.\n         */\n        this.min = 0;\n        /**\n         * For any field other than an 'int' type field, this will equal bytes.\n         * For {@linkcode FieldType.int}, max is the maximum value that this field can be.\n         */\n        this.max = 0;\n        /**\n         * This will by empty unless this field is of type {@linkcode FieldType.flags}\n         */\n        this.args = [];\n        this.name = name;\n        this.type = type;\n        this.bytes = bytes;\n        this.min = min;\n        this.max = max;\n        this.args = args;\n        if (bytes + min + max == 0) {\n            throw new Errors_1.InvalidFieldArgs(true);\n        }\n        else if (args.length > 0 && type != FieldType.flags) {\n            throw new Errors_1.InvalidFieldArgs(false);\n        }\n    }\n    return Field;\n}());\nexports.Field = Field;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Format = void 0;\nvar Errors_1 = require(\"./Errors\");\n/**\n * A Format object is used to classify a new type of message that will be sent over yodel.\n * A Format consists of a series of {@linkcode Field} objects, which depict a single key-value pair,\n * and a single type id called {@linkcode Format.mtype}.\n * A Format object is used to construct a {@linkcode Section} object, which can be sent through yodel.\n */\nvar Format = /** @class */ (function () {\n    /**\n     * Construct a new {@linkcode Format} object.\n     * @param fields The {@linkcode Field} objects that define this new type\n     * @param mtype The identifier for this type (must sync between yodel participants)\n     * @warning mtype must be between -126 and 127, excluding 0.\n     */\n    function Format(fields, mtype) {\n        if (mtype === void 0) { mtype = 0; }\n        /**An identifier for this type*/\n        this.mtype = 0;\n        this.fields = fields;\n        // Verify that mtype is an acceptable value\n        if (mtype == -127) {\n            throw new Errors_1.ReservedValue(\"-127\", \"mtype\");\n        }\n        else if (mtype < -127 || mtype > 127) {\n            throw new RangeError(\"Cannot assign value (\" + mtype + \") to 'mtype' taking range: [-127:127, !0]\");\n        }\n        else if (mtype == 0) {\n            throw new Errors_1.ReservedValue(\"0\", \"mtype\");\n        }\n        this.mtype = mtype;\n    }\n    return Format;\n}());\nexports.Format = Format;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Section = void 0;\n/**\n * A Section object is used to encode values organized by {@linkcode Field} objects within\n * a {@linkcode Format} object. A single {@linkcode Format} encodes mulpiple\n * {@linkcode Field} objects, which are assigned values inside a section object.\n *\n * A Section object is what you send through yodel, and what you will receive.\n * (For smaller projects you can also send and receive unformatted strings).\n */\nvar Section = /** @class */ (function () {\n    /**\n     * Construct a new Section for yodel.\n     * @param fmt a {@linkcode Format} object to encode this section. see {@linkcode Section.format}\n     * @param fields Values for the fields layed out in the {@linkcode Format} object. see {@linkcode Section.fields}\n     * @param payload Any extra bytes that could not be encoded, or a raw string. see {@linkcode Section.payload}\n     */\n    function Section(fmt, fields, payload) {\n        if (fields === void 0) { fields = {}; }\n        if (payload === void 0) { payload = \"\"; }\n        /**\n         * fields holds the values assigned to the different {@linkcode Field} objects in {@linkcode Section.format}.\n         * They are organized like this:\n         * ```JSON\n         * {\n         *      \"fieldname\": fieldValue\n         * }\n         * ```\n         * For each field lined up in {@linkcode Section.format}.\n         */\n        this.fields = {};\n        /**\n         * In cases where yodel is being used to send raw strings outside of {@linkcode Section} objects,\n         * payload will contain the raw string on the receiving end. Otherwise, payload contains any\n         * extra bytes that could not be assigned to fields.\n         */\n        this.payload = \"\";\n        this.format = fmt;\n        this.fields = fields;\n        this.payload = payload;\n    }\n    return Section;\n}());\nexports.Section = Section;\n;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\n/**\n * @module\n * @description\n * The Yodel API provides a way to communicate with the yodel standard through\n * a server.\n * For more information about yodel see the [Yodel Github](https://github.com/aldenq/Yodel)\n *\n * @author Philo Kaulkin        {@link https://www.github.com/Phil0nator | Github}\n * @author Alden Quigley        {@link https://www.github.com/aldenq | Github}\n *\n */\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Format = exports.Section = exports.Field = exports.FieldType = exports.UnkownGroup = exports.InvalidFieldArgs = exports.YodelSocket = void 0;\nvar Errors_1 = require(\"./Errors\");\nvar Section_1 = require(\"./Section\");\nvar Format_1 = require(\"./Format\");\n/**@internal*/\nvar API_AUTO_DECODE_HEADER = \"__yodelapidecode\";\n/**\n * @internal\n * API_EMPTY_FORMAT contains the reserved value -127\n*/\nvar API_EMPTY_FORMAT = new Format_1.Format([], 1);\nAPI_EMPTY_FORMAT.mtype = -127;\n/**\n * Event listener for the WebSocket of a YodelSocket\n * @param ysock YodelSocket in question\n * @param event MessageEvent containing raw data\n */\nfunction handleIncomingMessage(ysock, event) {\n    var section;\n    var data = JSON.parse(event.data);\n    if (data.action == \"incoming\") {\n        // Proper section type\n        if (\"fields\" in data.kwargs) {\n            section = new Section_1.Section(new Format_1.Format(data.kwargs.fields, data.kwargs.number), data.kwargs.fields, data.kwargs.payload);\n        }\n        // Raw string\n        else if (\"payload\" in data.kwargs) {\n                // Check for auto decode\n                if (data.kwargs.payload.startsWith(API_AUTO_DECODE_HEADER)) {\n                    var jsondata = data.kwargs.payload.slice(API_AUTO_DECODE_HEADER.length);\n                    section = new Section_1.Section(API_EMPTY_FORMAT, JSON.parse(jsondata), jsondata);\n                    // raw string\n                } else {\n                    section = new Section_1.Section(API_EMPTY_FORMAT, { \"payload\": data.kwargs.string }, data.kwargs.string);\n                }\n            } else {\n                throw new Error(\"Invalid Section data received: \" + data);\n            }\n        if (ysock.onmessage != null) {\n            ysock.onmessage(section);\n        } else {\n            ysock.messageStack.push(section);\n        }\n    } else if (data.action == \"error\") {\n        throw new YodelMessage(data.kwargs.message, data.kwargs.name);\n    }\n}\n/**\n * YodelMessage is a structure for the JSON sent between the client and server.\n * A message has an action, (What either the client or the server should do), and some\n * keword arguments.\n * @internal\n */\nvar YodelMessage = /** @class */function () {\n    /**\n     * Build a YodelMessage\n     * @param action action requested e.g: \"send\"\n     * @param kwargs relevant information for action in JSON\n     */\n    function YodelMessage(action, kwargs) {\n        /**\n         * The action that is intended.\n         * e.g: \"send\", \"listen\", \"joinGroup\"\n         */\n        this.action = \"\";\n        /**\n         * The information pertaining to the given action.\n         * e.g: {\"group\":\"newgroup\", \"name\":\"newname\"}\n         */\n        this.kwargs = {};\n        this.action = action;\n        this.kwargs = kwargs;\n    }\n    /**\n     * Wrapper for JSON.stringify\n     * @returns JSON string of this object\n     */\n    YodelMessage.prototype.stringify = function () {\n        return JSON.stringify(this);\n    };\n    return YodelMessage;\n}();\n;\n/**\n * The YodelSocket class is meant to allow API access to the yodel protocol through\n * a server. A message goes from the client, to a webserver, then into yodel from the server.\n */\nvar YodelSocket = /** @class */function () {\n    /**\n     * Construct a new YodelSocket\n     * @param hostip The IP address (including port) of the server\n     * @param name The name for 'this' robot (optional)\n     */\n    function YodelSocket(hostip, name) {\n        if (name === void 0) {\n            name = \"\";\n        }\n        /**\n         * The yodel groups that this socket is a part of\n         */\n        this.groups = [];\n        /**\n         * Message Handler\n         */\n        this.onmessage = null;\n        /**@private*/\n        this.messageStack = [];\n        /**@internal*/\n        this._relay = false;\n        this.hostip = hostip;\n        this._name = name;\n        this.channel = 0;\n        this.directSock = new WebSocket(hostip);\n        var thisref = this;\n        this.directSock.addEventListener('message', function (event) {\n            handleIncomingMessage(thisref, event);\n        });\n    }\n    /**\n     * Set a callback for when the YodelSocket is able to connect.\n     * If you want to use the more syncronous structure, use {@linkcode YodelSocket.awaitConnection}.\n     * @param fn A callback function that will be fired when the API is able to connect to the server.\n     */\n    YodelSocket.prototype.setOnConnect = function (fn) {\n        this.directSock.onopen = fn;\n    };\n    /**\n     * Set a onmessage callback.\n     * If you want to use a more syncronous approach, use {@linkcode YodelSocket.listen}.\n     * @param fn A callback for when this socket receives a yodel message that takes a {@linkcode Section} object.\n     */\n    YodelSocket.prototype.setOnMessage = function (fn) {\n        this.onmessage = fn;\n        this.messageStack.forEach(function (section) {\n            fn(section);\n        });\n    };\n    YodelSocket.prototype.sendNewFormat = function (fmt) {\n        this.sendRawMessage(new YodelMessage(\"createFormat\", fmt));\n    };\n    /**\n     * Send a message through the yodel API\n     * @param payload The main content of your message\n     * @param outName The name you are sending to\n     * @param outGroup The group you are sending to\n     */\n    YodelSocket.prototype.send = function (payload, outName, outGroup) {\n        if (outName === void 0) {\n            outName = \"\";\n        }\n        if (outGroup === void 0) {\n            outGroup = \"\";\n        }\n        var sendType = \"Basic\";\n        if (payload instanceof Section_1.Section) {\n            sendType = \"Section\";\n            this.sendNewFormat(payload.format);\n        } else if (payload instanceof Blob) {\n            payload.text().then(function (result) {\n                payload = result;\n            });\n        } else if (payload instanceof String) {\n            // Do nothing\n        } else {\n            // Send an arbitrary object\n            //payload = JSON.stringify({[API_AUTO_DECODE_HEADER]:JSON.stringify(payload)});\n            payload = API_AUTO_DECODE_HEADER + JSON.stringify(payload);\n        }\n        this.sendRawMessage(new YodelMessage(\"send\" + sendType, {\n            \"payload\": payload,\n            \"name\": outName,\n            \"group\": outGroup,\n            \"channel\": this.channel\n        }));\n    };\n    /**\n     * Add this robot to a new group\n     * @param newgroup new group to join\n     */\n    YodelSocket.prototype.joinGroup = function (newgroup) {\n        // Check if the group is already joined.\n        if (this.groups.indexOf(newgroup) != -1) {\n            return;\n        }\n        this.sendRawMessage(new YodelMessage(\"joinGroup\", {\n            \"group\": newgroup\n        }));\n        this.groups.push(newgroup);\n    };\n    /**\n     * Make this YodelSocket leave an existing group\n     * @param oldgroup An existing group that this YodelSocket is a part of\n     */\n    YodelSocket.prototype.leaveGroup = function (oldgroup) {\n        var idx = this.groups.indexOf(oldgroup);\n        if (idx == -1) {\n            throw new Errors_1.UnkownGroup(oldgroup);\n        }\n        this.sendRawMessage(new YodelMessage(\"leaveGroup\", {\n            \"group\": oldgroup\n        }));\n        this.groups.splice(idx, 1);\n    };\n    Object.defineProperty(YodelSocket.prototype, \"name\", {\n        /**\n         * Get the current name of this robot\n         */\n        get: function () {\n            return this._name;\n        },\n        /**\n         * Apply a new name to this robot\n         * @param newname A new name for this robot\n         */\n        set: function (newname) {\n            if (newname != this._name) {\n                this._name = newname;\n                this.sendRawMessage(new YodelMessage(\"setName\", {\n                    \"name\": newname\n                }));\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(YodelSocket.prototype, \"relay\", {\n        /**\n         * relay is true when yodel's mesh networking features are active.\n         * To turn these features on, set relay to true. Or, to turn them off,\n         * set it to false.\n         */\n        get: function () {\n            return this._relay;\n        },\n        /**\n         * Turn on or off yodel's mesh networking features.\n         * - See {@linkcode YodelSocket.relay}\n         * - See {@link \"https://github.com/aldenq/Yodel#yodelenablerelaybool\"}\n         */\n        set: function (val) {\n            if (val != this._relay) {\n                this._relay = val;\n                this.sendRawMessage(new YodelMessage(\"toggleRelay\", { relay: val }));\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    YodelSocket.prototype.sendRawMessage = function (msg) {\n        var rawform = msg.stringify();\n        this.directSock.send(rawform);\n    };\n    return YodelSocket;\n}();\nexports.YodelSocket = YodelSocket;\n;\nvar Errors_2 = require(\"./Errors\");\nObject.defineProperty(exports, \"InvalidFieldArgs\", { enumerable: true, get: function () {\n        return Errors_2.InvalidFieldArgs;\n    } });\nObject.defineProperty(exports, \"UnkownGroup\", { enumerable: true, get: function () {\n        return Errors_2.UnkownGroup;\n    } });\nvar Field_1 = require(\"./Field\");\nObject.defineProperty(exports, \"FieldType\", { enumerable: true, get: function () {\n        return Field_1.FieldType;\n    } });\nObject.defineProperty(exports, \"Field\", { enumerable: true, get: function () {\n        return Field_1.Field;\n    } });\nvar Section_2 = require(\"./Section\");\nObject.defineProperty(exports, \"Section\", { enumerable: true, get: function () {\n        return Section_2.Section;\n    } });\nvar Format_2 = require(\"./Format\");\nObject.defineProperty(exports, \"Format\", { enumerable: true, get: function () {\n        return Format_2.Format;\n    } });\n"],"sourceRoot":""}