{"version":3,"sources":["webpack://yodel/./dist/errors.js","webpack://yodel/./dist/field.js","webpack://yodel/./dist/format.js","webpack://yodel/./dist/section.js","webpack://yodel/webpack/bootstrap","webpack://yodel/./dist/yodel.js"],"names":["extendStatics","__extends","this","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","UnkownGroup","InvalidFieldArgs","_super","bytesproblem","_this","name","Error","group","Field","FieldType","errors_1","int","str","bytearray","flags","type","bytes","min","max","args","length","Format","fields","mtype","Section","fmt","payload","format","__webpack_module_cache__","__webpack_require__","moduleId","module","__webpack_modules__","YodelSocket","section_1","format_1","YodelMessage","action","kwargs","stringify","JSON","hostip","groups","onmessage","messageStack","channel","directSock","WebSocket","thisref","addEventListener","event","ysock","section","data","parse","string","number","console","log","push","handleIncomingMessage","awaitConnection","setTimeout","readyState","OPEN","setOnConnect","fn","onopen","setOnMessage","sendNewFormat","sendRawMessage","send","outName","outGroup","sendType","Blob","text","then","result","listen","pop","addGroup","newgroup","indexOf","deleteGroup","oldgroup","idx","splice","setName","newname","msg","rawform","errors_2","enumerable","get","field_1","section_2","format_2"],"mappings":"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","file":"yodel.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnkownGroup = exports.InvalidFieldArgs = void 0;\n/**\n * InvalidFieldFieldArgs is thrown when invalid arguments are provided in the\n * constructor for a {@linkcode Field} object.\n */\nvar InvalidFieldArgs = /** @class */ (function (_super) {\n    __extends(InvalidFieldArgs, _super);\n    /**@private*/\n    function InvalidFieldArgs(bytesproblem) {\n        var _this = this;\n        if (bytesproblem) {\n            _this = _super.call(this, \"Invalid Field Arguments: Must specify bytes, min/max, or arguments.\") || this;\n        }\n        else {\n            _this = _super.call(this, \"Invalid Field Arguments: Cannot create bit-lookup for Field object not of type 'flags'.\") || this;\n        }\n        _this.name = \"InvalidFieldArgs\";\n        return _this;\n    }\n    return InvalidFieldArgs;\n}(Error));\nexports.InvalidFieldArgs = InvalidFieldArgs;\n;\n/**\n * UnkownGroup is thrown when a {@linkcode YodelSocket} tries to leave a group\n * that it is not a part of.\n * See {@linkcode YodelSocket.deleteGroup}\n */\nvar UnkownGroup = /** @class */ (function (_super) {\n    __extends(UnkownGroup, _super);\n    /**@private*/\n    function UnkownGroup(group) {\n        var _this = _super.call(this, \"Cannot leave group '\" + group + \"' because this YodelSocket is not a part of group '\" + group + \"'\") || this;\n        _this.name = \"UnkownGroup\";\n        return _this;\n    }\n    return UnkownGroup;\n}(Error));\nexports.UnkownGroup = UnkownGroup;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Field = exports.FieldType = void 0;\nvar errors_1 = require(\"./errors\");\n/**\n * FieldType is an enumeration of normal python types.\n */\nvar FieldType = /** @class */ (function () {\n    function FieldType() {\n    }\n    /**The 'int' type from python */\n    FieldType.int = 0;\n    /**The 'str' type from python */\n    FieldType.str = 1;\n    /**The 'bytearray' type from python */\n    FieldType.bytearray = 2;\n    /**The yodel.flags type from yodel */\n    FieldType.flags = 3;\n    return FieldType;\n}());\nexports.FieldType = FieldType;\n;\n/**\n * A Field is used to encode one part of a {@linkcode Format}.\n * Each field is given a name, and some typing information. A field's purpose\n * is not to actually store values, but rather to them a key (as in a JSON key, value pair),\n * and some extra metadata for yodel.\n */\nvar Field = /** @class */ (function () {\n    function Field(name, type, bytes, min, max, args) {\n        if (bytes === void 0) { bytes = 0; }\n        if (min === void 0) { min = 0; }\n        if (max === void 0) { max = 0; }\n        if (args === void 0) { args = []; }\n        /**\n         * For some field types this will always be zero.\n         * For {@linkcode FieldType.int}, min is the minimum value that this field may be.\n         */\n        this.min = 0;\n        /**\n         * For any field other than an 'int' type field, this will equal bytes.\n         * For {@linkcode FieldType.int}, max is the maximum value that this field can be.\n         */\n        this.max = 0;\n        /**\n         * This will by empty unless this field is of type {@linkcode FieldType.flags}\n         */\n        this.args = [];\n        this.name = name;\n        this.type = type;\n        this.bytes = bytes;\n        this.min = min;\n        this.max = max;\n        this.args = args;\n        if (bytes + min + max == 0) {\n            throw new errors_1.InvalidFieldArgs(true);\n        }\n        else if (args.length > 0 && type != FieldType.flags) {\n            throw new errors_1.InvalidFieldArgs(false);\n        }\n    }\n    return Field;\n}());\nexports.Field = Field;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Format = void 0;\n/**\n * A Format object is used to classify a new type of message that will be sent over yodel.\n * A Format consists of a series of {@linkcode Field} objects, which depict a single key-value pair,\n * and a single type id called {@linkcode Format.mtype}.\n * A Format object is used to construct a {@linkcode Section} object, which can be sent through yodel.\n */\nvar Format = /** @class */ (function () {\n    /**\n     * Construct a new {@linkcode Format} object.\n     * @param fields The {@linkcode Field} objects that define this new type\n     * @param mtype The identifier for this type (must sync between yodel participants)\n     */\n    function Format(fields, mtype) {\n        if (mtype === void 0) { mtype = 0; }\n        /**An identifier for this type*/\n        this.mtype = 0;\n        this.fields = fields;\n        this.mtype = mtype;\n    }\n    return Format;\n}());\nexports.Format = Format;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Section = void 0;\n/**\n * A Section object is used to encode values organized by {@linkcode Field} objects within\n * a {@linkcode Format} object. A single {@linkcode Format} encodes mulpiple\n * {@linkcode Field} objects, which are assigned values inside a section object.\n *\n * A Section object is what you send through yodel, and what you will receive.\n * (For smaller projects you can also send and receive unformatted strings).\n */\nvar Section = /** @class */ (function () {\n    /**\n     * Construct a new Section for yodel.\n     * @param fmt a {@linkcode Format} object to encode this section. see {@linkcode Section.format}\n     * @param fields Values for the fields layed out in the {@linkcode Format} object. see {@linkcode Section.fields}\n     * @param payload Any extra bytes that could not be encoded, or a raw string. see {@linkcode Section.payload}\n     */\n    function Section(fmt, fields, payload) {\n        if (fields === void 0) { fields = {}; }\n        if (payload === void 0) { payload = \"\"; }\n        /**\n         * fields holds the values assigned to the different {@linkcode Field} objects in {@linkcode Section.format}.\n         * They are organized like this:\n         * ```JSON\n         * {\n         *      \"fieldname\": fieldValue\n         * }\n         * ```\n         * For each field lined up in {@linkcode Section.format}.\n         */\n        this.fields = {};\n        /**\n         * In cases where yodel is being used to send raw strings outside of {@linkcode Section} objects,\n         * payload will contain the raw string on the receiving end. Otherwise, payload contains any\n         * extra bytes that could not be assigned to fields.\n         */\n        this.payload = \"\";\n        this.format = fmt;\n        this.fields = fields;\n        this.payload = payload;\n    }\n    return Section;\n}());\nexports.Section = Section;\n;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\n/**\n * @module\n * @description\n * The Yodel API provides a way to communicate with the yodel standard through\n * a server.\n * For more information about yodel see the [Yodel Github](https://github.com/aldenq/Yodel)\n *\n * @author Philo Kaulkin        {@link https://www.github.com/Phil0nator | Github}\n * @author Alden Quigley        {@link https://www.github.com/aldenq | Github}\n *\n */\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Format = exports.Section = exports.Field = exports.FieldType = exports.UnkownGroup = exports.InvalidFieldArgs = exports.YodelSocket = void 0;\nvar errors_1 = require(\"./errors\");\nvar section_1 = require(\"./section\");\nvar format_1 = require(\"./format\");\n/**\n * Event listener for the WebSocket of a YodelSocket\n * @param ysock YodelSocket in question\n * @param event MessageEvent containing raw data\n */\nfunction handleIncomingMessage(ysock, event) {\n    var section;\n    var data = JSON.parse(event.data);\n    if (\"string\" in data.kwargs) {\n        section = new section_1.Section(new format_1.Format([], 0), { \"\": data.kwargs.string }, data.kwargs.string);\n    } else {\n        section = new section_1.Section(new format_1.Format(data.kwargs.fields, data.kwargs.number), data.kwargs.fields, data.kwargs.payload);\n    }\n    console.log(\"TEST: \", section);\n    if (ysock.onmessage != null) {\n        ysock.onmessage(section);\n    } else {\n        ysock.messageStack.push(section);\n    }\n}\n/**\n * YodelMessage is a structure for the JSON sent between the client and server.\n * A message has an action, (What either the client or the server should do), and some\n * keword arguments.\n * @internal\n */\nvar YodelMessage = /** @class */function () {\n    /**\n     * Build a YodelMessage\n     * @param action action requested e.g: \"send\"\n     * @param kwargs relevant information for action in JSON\n     */\n    function YodelMessage(action, kwargs) {\n        /**\n         * The action that is intended.\n         * e.g: \"send\", \"listen\", \"addGroup\"\n         */\n        this.action = \"\";\n        /**\n         * The information pertaining to the given action.\n         * e.g: {\"group\":\"newgroup\", \"name\":\"newname\"}\n         */\n        this.kwargs = {};\n        this.action = action;\n        this.kwargs = kwargs;\n    }\n    /**\n     * Wrapper for JSON.stringify\n     * @returns JSON string of this object\n     */\n    YodelMessage.prototype.stringify = function () {\n        return JSON.stringify(this);\n    };\n    return YodelMessage;\n}();\n;\n/**\n * The YodelSocket class is meant to allow API access to the yodel protocol through\n * a server. A message goes from the client, to a webserver, then into yodel from the server.\n */\nvar YodelSocket = /** @class */function () {\n    /**\n     * Construct a new YodelSocket\n     * @param hostip The IP address (including port) of the server\n     * @param name The name for 'this' robot (optional)\n     */\n    function YodelSocket(hostip, name) {\n        if (name === void 0) {\n            name = \"\";\n        }\n        /**\n         * The yodel groups that this socket is a part of\n         */\n        this.groups = [];\n        /**\n         * Message Handler\n         */\n        this.onmessage = null;\n        /**@private*/\n        this.messageStack = [];\n        this.hostip = hostip;\n        this.name = name;\n        this.channel = 0;\n        this.directSock = new WebSocket(hostip);\n        var thisref = this;\n        this.directSock.addEventListener('message', function (event) {\n            handleIncomingMessage(thisref, event);\n        });\n    }\n    /**\n     * This function will block until this YodelSocket has an open connection to\n     * the YodelAPI server. If you want to use the more event driven structure,\n     * use {@linkcode YodelSocket.setOnConnect}\n     */\n    YodelSocket.prototype.awaitConnection = function () {\n        var thisref = this;\n        setTimeout(function () {\n            if (thisref.directSock.readyState != WebSocket.OPEN) {\n                thisref.awaitConnection();\n            }\n        }, 10);\n    };\n    /**\n     * Set a callback for when the YodelSocket is able to connect.\n     * If you want to use the more syncronous structure, use {@linkcode YodelSocket.awaitConnection}.\n     * @param fn A callback function that will be fired when the API is able to connect to the server.\n     */\n    YodelSocket.prototype.setOnConnect = function (fn) {\n        this.directSock.onopen = fn;\n    };\n    /**\n     * Set a onmessage callback.\n     * If you want to use a more syncronous approach, use {@linkcode YodelSocket.listen}.\n     * @param fn A callback for when this socket receives a yodel message that takes a {@linkcode Section} object.\n     */\n    YodelSocket.prototype.setOnMessage = function (fn) {\n        this.onmessage = fn;\n    };\n    YodelSocket.prototype.sendNewFormat = function (fmt) {\n        this.sendRawMessage(new YodelMessage(\"createFormat\", fmt));\n    };\n    /**\n     * Send a message through the yodel API\n     * @param payload The main content of your message\n     * @param outName The name you are sending to\n     * @param outGroup The group you are sending to\n     */\n    YodelSocket.prototype.send = function (payload, outName, outGroup) {\n        if (outName === void 0) {\n            outName = \"\";\n        }\n        if (outGroup === void 0) {\n            outGroup = \"\";\n        }\n        var sendType = \"Basic\";\n        if (payload instanceof section_1.Section) {\n            sendType = \"Section\";\n            this.sendNewFormat(payload.format);\n        } else if (payload instanceof Blob) {\n            payload.text().then(function (result) {\n                payload = result;\n            });\n        }\n        this.sendRawMessage(new YodelMessage(\"send\" + sendType, {\n            \"payload\": payload,\n            \"name\": outName,\n            \"group\": outGroup,\n            \"channel\": this.channel\n        }));\n    };\n    /**\n     * Listen for an incoming yodel message.\n     * If you want to use the more event-driven structure use {@linkcode YodelSocket.setOnMessage}\n     * @returns Either the next incoming {@linkcode Section} from yodel, or undefined if none are available.\n     */\n    YodelSocket.prototype.listen = function () {\n        if (this.messageStack.length != 0) {\n            return this.messageStack.pop();\n        }\n    };\n    /**\n     * Add this robot to a new group\n     * @param newgroup new group to join\n     */\n    YodelSocket.prototype.addGroup = function (newgroup) {\n        // Check if the group is already joined.\n        if (this.groups.indexOf(newgroup) != -1) {\n            return;\n        }\n        this.sendRawMessage(new YodelMessage(\"addGroup\", {\n            \"group\": newgroup\n        }));\n        this.groups.push(newgroup);\n    };\n    /**\n     * Make this YodelSocket leave an existing group\n     * @param oldgroup An existing group that this YodelSocket is a part of\n     */\n    YodelSocket.prototype.deleteGroup = function (oldgroup) {\n        var idx = this.groups.indexOf(oldgroup);\n        if (idx == -1) {\n            throw new errors_1.UnkownGroup(oldgroup);\n        }\n        this.sendRawMessage(new YodelMessage(\"deleteGroup\", {\n            \"group\": oldgroup\n        }));\n        this.groups.splice(idx, 1);\n    };\n    /**\n     * Apply a new name to this robot\n     * @param newname A new name for this robot\n     */\n    YodelSocket.prototype.setName = function (newname) {\n        this.name = newname;\n        this.sendRawMessage(new YodelMessage(\"setName\", {\n            \"name\": newname\n        }));\n    };\n    YodelSocket.prototype.sendRawMessage = function (msg) {\n        var rawform = msg.stringify();\n        this.directSock.send(rawform);\n    };\n    return YodelSocket;\n}();\nexports.YodelSocket = YodelSocket;\n;\nvar errors_2 = require(\"./errors\");\nObject.defineProperty(exports, \"InvalidFieldArgs\", { enumerable: true, get: function () {\n        return errors_2.InvalidFieldArgs;\n    } });\nObject.defineProperty(exports, \"UnkownGroup\", { enumerable: true, get: function () {\n        return errors_2.UnkownGroup;\n    } });\nvar field_1 = require(\"./field\");\nObject.defineProperty(exports, \"FieldType\", { enumerable: true, get: function () {\n        return field_1.FieldType;\n    } });\nObject.defineProperty(exports, \"Field\", { enumerable: true, get: function () {\n        return field_1.Field;\n    } });\nvar section_2 = require(\"./section\");\nObject.defineProperty(exports, \"Section\", { enumerable: true, get: function () {\n        return section_2.Section;\n    } });\nvar format_2 = require(\"./format\");\nObject.defineProperty(exports, \"Format\", { enumerable: true, get: function () {\n        return format_2.Format;\n    } });\n"],"sourceRoot":""}