{"version":3,"sources":["webpack://yodel/./dist/Errors.js","webpack://yodel/./dist/Field.js","webpack://yodel/./dist/Format.js","webpack://yodel/./dist/Section.js","webpack://yodel/webpack/bootstrap","webpack://yodel/./dist/yodel.js"],"names":["extendStatics","__extends","this","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","defineProperty","exports","value","ReservedValue","UnkownGroup","InvalidFieldArgs","_super","bytesproblem","_this","name","Error","group","assignment","Field","FieldType","Errors_1","int","str","bytearray","flags","type","bytes","min","max","args","length","Format","fields","mtype","Section","fmt","payload","format","__webpack_module_cache__","__webpack_require__","moduleId","module","__webpack_modules__","YodelSocket","Section_1","Format_1","API_AUTO_DECODE_HEADER","YodelMessage","action","kwargs","stringify","JSON","hostip","groups","onmessage","messageStack","_relay","_name","channel","directSock","WebSocket","thisref","addEventListener","event","ysock","section","data","parse","string","startsWith","jsondata","slice","number","push","handleIncomingMessage","awaitConnection","setTimeout","readyState","OPEN","setOnConnect","fn","onopen","setOnMessage","sendNewFormat","sendRawMessage","send","outName","outGroup","sendType","Blob","text","then","result","listen","pop","joinGroup","newgroup","indexOf","leaveGroup","oldgroup","idx","splice","get","set","newname","enumerable","configurable","val","relay","msg","rawform","Errors_2","Field_1","Section_2","Format_2"],"mappings":"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","file":"yodel.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReservedValue = exports.UnkownGroup = exports.InvalidFieldArgs = void 0;\n/**\n * InvalidFieldFieldArgs is thrown when invalid arguments are provided in the\n * constructor for a {@linkcode Field} object.\n */\nvar InvalidFieldArgs = /** @class */ (function (_super) {\n    __extends(InvalidFieldArgs, _super);\n    /**@private*/\n    function InvalidFieldArgs(bytesproblem) {\n        var _this = this;\n        if (bytesproblem) {\n            _this = _super.call(this, \"Invalid Field Arguments: Must specify bytes, min/max, or arguments.\") || this;\n        }\n        else {\n            _this = _super.call(this, \"Invalid Field Arguments: Cannot create bit-lookup for Field object not of type 'flags'.\") || this;\n        }\n        _this.name = \"InvalidFieldArgs\";\n        return _this;\n    }\n    return InvalidFieldArgs;\n}(Error));\nexports.InvalidFieldArgs = InvalidFieldArgs;\n;\n/**\n * UnkownGroup is thrown when a {@linkcode YodelSocket} tries to leave a group\n * that it is not a part of.\n * See {@linkcode YodelSocket.leaveGroup}\n */\nvar UnkownGroup = /** @class */ (function (_super) {\n    __extends(UnkownGroup, _super);\n    /**@private*/\n    function UnkownGroup(group) {\n        var _this = _super.call(this, \"Cannot leave group '\" + group + \"' because this YodelSocket is not a part of group '\" + group + \"'\") || this;\n        _this.name = \"UnkownGroup\";\n        return _this;\n    }\n    return UnkownGroup;\n}(Error));\nexports.UnkownGroup = UnkownGroup;\n;\n/**\n * ReservedValue is thrown when a user tries to use a value that is reserved for the api.\n * e.g: Setting the mtype of a {@linkcode Format} object to -127 (this number is reserved\n * for the API)\n */\nvar ReservedValue = /** @class */ (function (_super) {\n    __extends(ReservedValue, _super);\n    /**@private*/\n    function ReservedValue(value, assignment) {\n        var _this = _super.call(this, \"Invalid use of reserved value [\" + value + \"] in assignment to '\" + assignment + \"'.\") || this;\n        _this.name = \"ReservedValue\";\n        return _this;\n    }\n    return ReservedValue;\n}(Error));\nexports.ReservedValue = ReservedValue;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Field = exports.FieldType = void 0;\nvar Errors_1 = require(\"./Errors\");\n/**\n * FieldType is an enumeration of normal python types.\n */\nvar FieldType = /** @class */ (function () {\n    function FieldType() {\n    }\n    /**The 'int' type from python */\n    FieldType.int = 0;\n    /**The 'str' type from python */\n    FieldType.str = 1;\n    /**The 'bytearray' type from python */\n    FieldType.bytearray = 2;\n    /**The yodel.flags type from yodel */\n    FieldType.flags = 3;\n    return FieldType;\n}());\nexports.FieldType = FieldType;\n;\n/**\n * A Field is used to encode one part of a {@linkcode Format}.\n * Each field is given a name, and some typing information. A field's purpose\n * is not to actually store values, but rather to them a key (as in a JSON key, value pair),\n * and some extra metadata for yodel.\n */\nvar Field = /** @class */ (function () {\n    function Field(name, type, bytes, min, max, args) {\n        if (bytes === void 0) { bytes = 0; }\n        if (min === void 0) { min = 0; }\n        if (max === void 0) { max = 0; }\n        if (args === void 0) { args = []; }\n        /**\n         * For some field types this will always be zero.\n         * For {@linkcode FieldType.int}, min is the minimum value that this field may be.\n         */\n        this.min = 0;\n        /**\n         * For any field other than an 'int' type field, this will equal bytes.\n         * For {@linkcode FieldType.int}, max is the maximum value that this field can be.\n         */\n        this.max = 0;\n        /**\n         * This will by empty unless this field is of type {@linkcode FieldType.flags}\n         */\n        this.args = [];\n        this.name = name;\n        this.type = type;\n        this.bytes = bytes;\n        this.min = min;\n        this.max = max;\n        this.args = args;\n        if (bytes + min + max == 0) {\n            throw new Errors_1.InvalidFieldArgs(true);\n        }\n        else if (args.length > 0 && type != FieldType.flags) {\n            throw new Errors_1.InvalidFieldArgs(false);\n        }\n    }\n    return Field;\n}());\nexports.Field = Field;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Format = void 0;\nvar Errors_1 = require(\"./Errors\");\n/**\n * A Format object is used to classify a new type of message that will be sent over yodel.\n * A Format consists of a series of {@linkcode Field} objects, which depict a single key-value pair,\n * and a single type id called {@linkcode Format.mtype}.\n * A Format object is used to construct a {@linkcode Section} object, which can be sent through yodel.\n */\nvar Format = /** @class */ (function () {\n    /**\n     * Construct a new {@linkcode Format} object.\n     * @param fields The {@linkcode Field} objects that define this new type\n     * @param mtype The identifier for this type (must sync between yodel participants)\n     * @warning mtype must be between -126 and 127, excluding 0.\n     */\n    function Format(fields, mtype) {\n        if (mtype === void 0) { mtype = 0; }\n        /**An identifier for this type*/\n        this.mtype = 0;\n        this.fields = fields;\n        if (mtype == -127) {\n            throw new Errors_1.ReservedValue(\"-127\", \"mtype\");\n        }\n        this.mtype = mtype;\n    }\n    return Format;\n}());\nexports.Format = Format;\n;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Section = void 0;\n/**\n * A Section object is used to encode values organized by {@linkcode Field} objects within\n * a {@linkcode Format} object. A single {@linkcode Format} encodes mulpiple\n * {@linkcode Field} objects, which are assigned values inside a section object.\n *\n * A Section object is what you send through yodel, and what you will receive.\n * (For smaller projects you can also send and receive unformatted strings).\n */\nvar Section = /** @class */ (function () {\n    /**\n     * Construct a new Section for yodel.\n     * @param fmt a {@linkcode Format} object to encode this section. see {@linkcode Section.format}\n     * @param fields Values for the fields layed out in the {@linkcode Format} object. see {@linkcode Section.fields}\n     * @param payload Any extra bytes that could not be encoded, or a raw string. see {@linkcode Section.payload}\n     */\n    function Section(fmt, fields, payload) {\n        if (fields === void 0) { fields = {}; }\n        if (payload === void 0) { payload = \"\"; }\n        /**\n         * fields holds the values assigned to the different {@linkcode Field} objects in {@linkcode Section.format}.\n         * They are organized like this:\n         * ```JSON\n         * {\n         *      \"fieldname\": fieldValue\n         * }\n         * ```\n         * For each field lined up in {@linkcode Section.format}.\n         */\n        this.fields = {};\n        /**\n         * In cases where yodel is being used to send raw strings outside of {@linkcode Section} objects,\n         * payload will contain the raw string on the receiving end. Otherwise, payload contains any\n         * extra bytes that could not be assigned to fields.\n         */\n        this.payload = \"\";\n        this.format = fmt;\n        this.fields = fields;\n        this.payload = payload;\n    }\n    return Section;\n}());\nexports.Section = Section;\n;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\n/**\n * @module\n * @description\n * The Yodel API provides a way to communicate with the yodel standard through\n * a server.\n * For more information about yodel see the [Yodel Github](https://github.com/aldenq/Yodel)\n *\n * @author Philo Kaulkin        {@link https://www.github.com/Phil0nator | Github}\n * @author Alden Quigley        {@link https://www.github.com/aldenq | Github}\n *\n */\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Format = exports.Section = exports.Field = exports.FieldType = exports.UnkownGroup = exports.InvalidFieldArgs = exports.YodelSocket = void 0;\nvar Errors_1 = require(\"./Errors\");\nvar Section_1 = require(\"./Section\");\nvar Format_1 = require(\"./Format\");\n/**\n * Event listener for the WebSocket of a YodelSocket\n * @param ysock YodelSocket in question\n * @param event MessageEvent containing raw data\n */\nfunction handleIncomingMessage(ysock, event) {\n    var section;\n    var data = JSON.parse(event.data);\n    if (\"string\" in data.kwargs) {\n        if (data.kwargs.string.startsWith(API_AUTO_DECODE_HEADER)) {\n            var jsondata = data.kwargs.string.slice(API_AUTO_DECODE_HEADER.length);\n            section = new Section_1.Section(new Format_1.Format([], 0), JSON.parse(jsondata), jsondata);\n        } else {\n            section = new Section_1.Section(new Format_1.Format([], 0), { \"\": data.kwargs.string }, data.kwargs.string);\n        }\n    } else {\n        section = new Section_1.Section(new Format_1.Format(data.kwargs.fields, data.kwargs.number), data.kwargs.fields, data.kwargs.payload);\n    }\n    if (ysock.onmessage != null) {\n        ysock.onmessage(section);\n    } else {\n        ysock.messageStack.push(section);\n    }\n}\n/**@internal*/\nvar API_AUTO_DECODE_HEADER = \"__yodelapidecode\";\n/**\n * YodelMessage is a structure for the JSON sent between the client and server.\n * A message has an action, (What either the client or the server should do), and some\n * keword arguments.\n * @internal\n */\nvar YodelMessage = /** @class */function () {\n    /**\n     * Build a YodelMessage\n     * @param action action requested e.g: \"send\"\n     * @param kwargs relevant information for action in JSON\n     */\n    function YodelMessage(action, kwargs) {\n        /**\n         * The action that is intended.\n         * e.g: \"send\", \"listen\", \"joinGroup\"\n         */\n        this.action = \"\";\n        /**\n         * The information pertaining to the given action.\n         * e.g: {\"group\":\"newgroup\", \"name\":\"newname\"}\n         */\n        this.kwargs = {};\n        this.action = action;\n        this.kwargs = kwargs;\n    }\n    /**\n     * Wrapper for JSON.stringify\n     * @returns JSON string of this object\n     */\n    YodelMessage.prototype.stringify = function () {\n        return JSON.stringify(this);\n    };\n    return YodelMessage;\n}();\n;\n/**\n * The YodelSocket class is meant to allow API access to the yodel protocol through\n * a server. A message goes from the client, to a webserver, then into yodel from the server.\n */\nvar YodelSocket = /** @class */function () {\n    /**\n     * Construct a new YodelSocket\n     * @param hostip The IP address (including port) of the server\n     * @param name The name for 'this' robot (optional)\n     */\n    function YodelSocket(hostip, name) {\n        if (name === void 0) {\n            name = \"\";\n        }\n        /**\n         * The yodel groups that this socket is a part of\n         */\n        this.groups = [];\n        /**\n         * Message Handler\n         */\n        this.onmessage = null;\n        /**@private*/\n        this.messageStack = [];\n        /**@internal*/\n        this._relay = false;\n        this.hostip = hostip;\n        this._name = name;\n        this.channel = 0;\n        this.directSock = new WebSocket(hostip);\n        var thisref = this;\n        this.directSock.addEventListener('message', function (event) {\n            handleIncomingMessage(thisref, event);\n        });\n    }\n    /**\n     * This function will block until this YodelSocket has an open connection to\n     * the YodelAPI server. If you want to use the more event driven structure,\n     * use {@linkcode YodelSocket.setOnConnect}\n     */\n    YodelSocket.prototype.awaitConnection = function () {\n        var thisref = this;\n        setTimeout(function () {\n            if (thisref.directSock.readyState != WebSocket.OPEN) {\n                thisref.awaitConnection();\n            }\n        }, 10);\n    };\n    /**\n     * Set a callback for when the YodelSocket is able to connect.\n     * If you want to use the more syncronous structure, use {@linkcode YodelSocket.awaitConnection}.\n     * @param fn A callback function that will be fired when the API is able to connect to the server.\n     */\n    YodelSocket.prototype.setOnConnect = function (fn) {\n        this.directSock.onopen = fn;\n    };\n    /**\n     * Set a onmessage callback.\n     * If you want to use a more syncronous approach, use {@linkcode YodelSocket.listen}.\n     * @param fn A callback for when this socket receives a yodel message that takes a {@linkcode Section} object.\n     */\n    YodelSocket.prototype.setOnMessage = function (fn) {\n        this.onmessage = fn;\n    };\n    YodelSocket.prototype.sendNewFormat = function (fmt) {\n        this.sendRawMessage(new YodelMessage(\"createFormat\", fmt));\n    };\n    /**\n     * Send a message through the yodel API\n     * @param payload The main content of your message\n     * @param outName The name you are sending to\n     * @param outGroup The group you are sending to\n     */\n    YodelSocket.prototype.send = function (payload, outName, outGroup) {\n        if (outName === void 0) {\n            outName = \"\";\n        }\n        if (outGroup === void 0) {\n            outGroup = \"\";\n        }\n        var sendType = \"Basic\";\n        if (payload instanceof Section_1.Section) {\n            sendType = \"Section\";\n            this.sendNewFormat(payload.format);\n        } else if (payload instanceof Blob) {\n            payload.text().then(function (result) {\n                payload = result;\n            });\n        } else if (payload instanceof String) {\n            // Do nothing\n        } else {\n            // Send an arbitrary object\n            payload = API_AUTO_DECODE_HEADER + JSON.stringify(payload);\n        }\n        this.sendRawMessage(new YodelMessage(\"send\" + sendType, {\n            \"payload\": payload,\n            \"name\": outName,\n            \"group\": outGroup,\n            \"channel\": this.channel\n        }));\n    };\n    /**\n     * Listen for an incoming yodel message.\n     * If you want to use the more event-driven structure use {@linkcode YodelSocket.setOnMessage}\n     * @returns Either the next incoming {@linkcode Section} from yodel, or undefined if none are available.\n     */\n    YodelSocket.prototype.listen = function () {\n        if (this.messageStack.length != 0) {\n            return this.messageStack.pop();\n        }\n    };\n    /**\n     * Add this robot to a new group\n     * @param newgroup new group to join\n     */\n    YodelSocket.prototype.joinGroup = function (newgroup) {\n        // Check if the group is already joined.\n        if (this.groups.indexOf(newgroup) != -1) {\n            return;\n        }\n        this.sendRawMessage(new YodelMessage(\"joinGroup\", {\n            \"group\": newgroup\n        }));\n        this.groups.push(newgroup);\n    };\n    /**\n     * Make this YodelSocket leave an existing group\n     * @param oldgroup An existing group that this YodelSocket is a part of\n     */\n    YodelSocket.prototype.leaveGroup = function (oldgroup) {\n        var idx = this.groups.indexOf(oldgroup);\n        if (idx == -1) {\n            throw new Errors_1.UnkownGroup(oldgroup);\n        }\n        this.sendRawMessage(new YodelMessage(\"leaveGroup\", {\n            \"group\": oldgroup\n        }));\n        this.groups.splice(idx, 1);\n    };\n    Object.defineProperty(YodelSocket.prototype, \"name\", {\n        /**\n         * Get the current name of this robot\n         */\n        get: function () {\n            return this._name;\n        },\n        /**\n         * Apply a new name to this robot\n         * @param newname A new name for this robot\n         */\n        set: function (newname) {\n            if (newname != this._name) {\n                this._name = newname;\n                this.sendRawMessage(new YodelMessage(\"setName\", {\n                    \"name\": newname\n                }));\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(YodelSocket.prototype, \"relay\", {\n        /**\n         * relay is true when yodel's mesh networking features are active.\n         * To turn these features on, set relay to true. Or, to turn them off,\n         * set it to false.\n         */\n        get: function () {\n            return this._relay;\n        },\n        /**\n         * Turn on or off yodel's mesh networking features.\n         * - See {@linkcode YodelSocket.relay}\n         * - See {@link \"https://github.com/aldenq/Yodel#yodelenablerelaybool\"}\n         */\n        set: function (val) {\n            if (val != this._relay) {\n                this._relay = val;\n                this.sendRawMessage(new YodelMessage(\"toggleRelay\", { relay: val }));\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    YodelSocket.prototype.sendRawMessage = function (msg) {\n        var rawform = msg.stringify();\n        this.directSock.send(rawform);\n    };\n    return YodelSocket;\n}();\nexports.YodelSocket = YodelSocket;\n;\nvar Errors_2 = require(\"./Errors\");\nObject.defineProperty(exports, \"InvalidFieldArgs\", { enumerable: true, get: function () {\n        return Errors_2.InvalidFieldArgs;\n    } });\nObject.defineProperty(exports, \"UnkownGroup\", { enumerable: true, get: function () {\n        return Errors_2.UnkownGroup;\n    } });\nvar Field_1 = require(\"./Field\");\nObject.defineProperty(exports, \"FieldType\", { enumerable: true, get: function () {\n        return Field_1.FieldType;\n    } });\nObject.defineProperty(exports, \"Field\", { enumerable: true, get: function () {\n        return Field_1.Field;\n    } });\nvar Section_2 = require(\"./Section\");\nObject.defineProperty(exports, \"Section\", { enumerable: true, get: function () {\n        return Section_2.Section;\n    } });\nvar Format_2 = require(\"./Format\");\nObject.defineProperty(exports, \"Format\", { enumerable: true, get: function () {\n        return Format_2.Format;\n    } });\n"],"sourceRoot":""}